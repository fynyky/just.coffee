// Generated by CoffeeScript 1.3.3
(function() {
  var validHTMLTags;

  validHTMLTags = ["a", "abbr", "acronym", "address", "applet", "area", "article", "aside", "audio", "b", "bdi", "base", "basefont", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "command", "data", "datagrid", "datalist", "dd", "del", "details", "dfn", "dir", "div", "dl", "dt", "em", "embed", "eventsource", "fieldset", "figcaption", "figure", "font", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "isindex", "kbd", "keygen", "label", "legend", "li", "link", "mark", "map", "menu", "meta", "meter", "nav", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "pre", "progress", "q", "ruby", "rp", "rt", "s", "samp", "script", "section", "select", "small", "source", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"];

  window.element = function(namesOrNode, oncreate) {
    var name, names, newNode, tag, validTags, _ref;
    if (namesOrNode instanceof Node) {
      newNode = namesOrNode;
    } else if (typeof namesOrNode === "string") {
      names = namesOrNode.split(" ");
      validTags = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = names.length; _i < _len; _i++) {
          name = names[_i];
          if (validHTMLTags.indexOf(name >= 0)) {
            _results.push(name);
          }
        }
        return _results;
      })();
      tag = (_ref = validTags[0]) != null ? _ref : "div";
      newNode = document.createElement(tag);
      newNode.className = namesOrNode;
    }
    if (typeof oncreate === "function") {
      newNode.oncreate = oncreate;
    } else if (typeof oncreate === "string") {
      newNode.oncreate = function() {
        return this.innerHTML = oncreate;
      };
    }
    if (newNode.oncreate != null) {
      newNode.oncreate();
    }
    return newNode;
  };

  Element.prototype.element = function(name, oncreate) {
    var newNode;
    newNode = window.element(name, oncreate);
    this.appendChild(newNode);
    return newNode;
  };

  Element.prototype.text = function(value) {
    return this.appendChild(document.createTextNode(value));
  };

  Element.prototype.attribute = function(name, value) {
    return this.setAttribute(name, value);
  };

  /* --------------------------------------------
       Begin main.coffee
  --------------------------------------------
  */


  document.body.element("background");

  document.body.element("article", function() {
    this.element("header", function() {
      this.element("h1", "just.coffee");
      return this.element("p", "Build the DOM using Coffeescript");
    });
    return this.element("section", function() {
      this.element("what", function() {
        this.element("h1", "What");
        this.element("p", "Simple helper functions that let you build the DOM like this");
        return this.element("pre", "@element \"why\", ->\n  @element \"h1\", \"Why\"\n  @element \"ul\", ->\n    @element \"li\", \"Less cognitive dissonance switching between HTML and script\"\n    @element \"li\", \"There is one hierarchy: The code hierarchy\"\n    @element \"li\", \"Full code flexibility in creating templates\"\n    @element \"li\", \"No magic, just functions, it's just coffeescript\"\n  \n");
      });
      this.element("why", function() {
        this.element("h1", "Why");
        return this.element("ul", function() {
          this.element("li", "Less cognitive dissonance switching between HTML and script");
          this.element("li", "There is one hierarchy: The code hierarchy");
          this.element("li", "Full code flexibility in creating templates");
          return this.element("li", "No magic, just functions, it's just coffeescript");
        });
      });
      return this.element("how", function() {
        this.element("h1", "How");
        return this.element("ol", function() {
          this.element("li", function() {
            this.text("download it from github ");
            return this.element("a", "here");
          });
          this.element("li", "add the script tag to your header");
          return this.element("li", "start using it!");
        });
      });
    });
  });

}).call(this);
